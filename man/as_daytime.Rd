% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1_as_daytime.R
\name{as_daytime}
\alias{as_daytime}
\alias{as_daytime.POSIXt}
\alias{as_daytime.numeric}
\alias{as_daytime.circular}
\alias{as_daytime.character}
\alias{as_daytime.integer}
\title{Retrieve minute of day}
\usage{
as_daytime(x, ...)

\method{as_daytime}{POSIXt}(x, first_min = 0, rational = FALSE, ...)

\method{as_daytime}{numeric}(
  x,
  first_min = attr(x, "first_min"),
  rational = attr(x, "rational"),
  ...
)

\method{as_daytime}{circular}(
  x,
  first_min = attr(x, "first_min"),
  rational = attr(x, "rational"),
  ...
)

\method{as_daytime}{character}(x, first_min = 0, rational = FALSE, ...)

\method{as_daytime}{integer}(x, first_min = attr(x, "first_min"), ...)
}
\arguments{
\item{x}{value from which to determine the minute of day value; typically
inherits from \code{character} or \code{POSIXt}, but methods are available
for \code{circular} and \code{numeric} as well}

\item{...}{arguments passed to \code{as.POSIXct}. See details.}

\item{first_min}{value for the first minute of the day. Must be either
\code{0} (minutes coded as 0-1439) or \code{1} (minutes coded as 1-1440)}

\item{rational}{logical. If \code{FALSE}, values are rounded down to the
nearest whole minute; if \code{TRUE}, real-numbered values are returned
with the decimal portions reflecting seconds}
}
\value{
a \code{daytime} object
}
\description{
Retrieve minute of day
}
\details{
If \code{x} inherits from \code{character}, casting to \code{POSIXt}
  will be attempted. Arguments can be passed to \code{as.POSIXct} to assist
  with this, notably the \code{format} and \code{tz} arguments. Presumably
  the timezone should not matter, except perhaps during a daylight saving
  transition hour. But it is always safest to pass in POSIX-formatted data
  that you have vetted yourself.
}
\examples{

t1_char <- "2000-01-01 00:01:30"
t1 <- as.POSIXct(t1_char, "UTC")

## Methods exist to give comparable output from character and POSIX inputs
as_daytime(t1_char)
as_daytime(t1)

## Settings can be changed to yield a range of values
as_daytime(t1, 0, TRUE)
as_daytime(t1, 1, FALSE)
as_daytime(t1, 1, TRUE)

## Beware of silent timezone changes. System will
## assume your local timezone unless told otherwise!
as_daytime(
  strftime(t1, "\%H:\%M:\%S", "EST"),
  format = "\%H:\%M:\%S"
)

}
